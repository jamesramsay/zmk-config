// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define L_BASE  0
#define L_NUM   1
#define L_SYM   2
#define L_FUN   3
#define L_NAV   4
#define L_MEDIA 5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <28 31>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |              |  6  |  7  |  8  |  9  |  0  |     |
// |     |  Q  |  W  |  E  |  R  |  T  |              |  Y  |  U  |  I  |  O  |  P  |     |
// |     |  A  |  S  |  D  |  F  |  G  |              |  H  |  J  |  K  |  L  |  '  |     |
// |     |  Z  |  X  |  C  |  V  |  B  | MUTE | |     |  N  |  M  |  ,  |  .  |  /  |     |
//             |     |     | ESC |     | TAB  | |  ↵  |  ⌫  |  ␡  |     |     |
            bindings = <
&none  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5                        &kp N6  &kp N7       &kp N8       &kp N9       &kp N0          &none
&none  &kp Q        &kp W        &kp E        &kp R        &kp T                         &kp Y   &kp U        &kp I        &kp O        &kp P           &none
&none  &hm LCTRL A  &hm LALT S   &hm LCMD D   &hm LSHFT F  &kp G                         &kp H   &hm LSHFT J  &hm LCMD K   &hm LALT L   &hm LCTRL APOS  &none
&none  &kp Z        &kp X        &kp C        &kp V        &kp B   &kp C_MUTE   &none    &kp N   &kp M        &kp COMMA    &kp DOT      &kp FSLH        &none
                     &none  &none  &kp ESC  &lt L_NAV SPACE  &lt L_MEDIA TAB    &lt L_SYM RET  &lt L_NUM BSPC  &lt L_FUN DEL  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        numeric_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |             |     |       |       |       |       |     |
// |     |  [  |  7  |  8  |  9  |  ]  |             |     |       |       |       |       |     |
// |     |  ;  |  4  |  5  |  6  |  =  |             |     | LSHFT | LCMD  | LALT  | LCTRL |     |
// |     |  `  |  1  |  2  |  3  |  \  |             |     |       |       | RALT  |       |     |
//             |     |  .  |  0  |  -  |     | |     |     |       |       |       |
            bindings = <
&none  &none      &none   &none    &none   &none                    &none  &none      &none     &none     &none      &none
&none  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT                 &none  &none      &none     &none     &none      &none
&none  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL                &none  &kp LSHFT  &kp LCMD  &kp LALT  &kp LCTRL  &none
&none  &kp GRAVE  &kp N1  &kp N2   &kp N1  &kp BSLH   &none  &none  &none  &none      &none     &kp RALT  &none      &none
                  &none   &kp DOT  &kp N0  &kp MINUS  &none  &none  &none  &none      &none     &none
            >;
        };

        symbol_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |             |     |       |       |       |       |     |
// |     |  {  |  &  |  *  |  (  |  }  |             |     |       |       |       |       |     |
// |     |  :  |  $  |  %  |  ^  |  +  |             |     | LSHFT | LCMD  | LALT  | LCTRL |     |
// |     |  ~  |  !  |  @  |  #  |  |  |             |     |       |       | RALT  |       |     |
//             |     |  (  |  )  |  _  |     | |     |     |       |       |       |
            bindings = <
&none  &none      &none     &none      &none      &none                    &none  &none      &none     &none     &none      &none
&none  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC                 &none  &none      &none     &none     &none      &none
&none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                 &none  &kp LSHFT  &kp LCMD  &kp LALT  &kp LCTRL  &none
&none  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE   &none  &none  &none  &none      &none     &kp RALT  &none      &none
                  &none     &kp LPAR   &kp RPAR   &kp UNDER  &none  &none  &none  &none      &none     &none
            >;
        };

        function_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |              |     |       |       |       |       |     |
// |     | F12 | F7  | F8  | F9  |     |              |     |       |       |       |       |     |
// |     | F11 | F4  | F5  | F6  |     |              |     | LSHFT | LCMD  | LALT  | LCTRL |     |
// |     | F10 | F1  | F2  | F3  |     |     |  |     |     |       |       | RALT  |       |     |
//             |     |     |     |     |     |  |     |     |       |       |       |
            bindings = <
&none  &none    &none   &none   &none   &none                &none  &none      &none     &none     &none      &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &none                &none  &none      &none     &none     &none      &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &none                &none  &kp LSHFT  &kp LCMD  &kp LALT  &kp LCTRL  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &none  &none  &none  &none  &none      &none     &kp RALT  &none      &none
                &none   &none   &none   &none  &none  &none  &none  &none      &none     &none
            >;
        };

        nav_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |       |       |       |       |     |                |      |      |      |      |      |     |
// |     |       |       |       |       |     |                |      |      |      |      |      |     |
// |     | LCTRL | LALT  | LCMD  | LSHFT |     |                |   <  |   v  |  ^   |  >   | CAPS |     |
// |     |       | RALT  |       |       |     |      |  |      | HOME | PGDN | PGUP | END  | INS  |     |
//               |       |       |       |     |      |  |      |      |      |      |      |
            bindings = <
&none  &none      &none     &none     &none      &none                  &none     &none      &none      &none      &none     &none
&none  &none      &none     &none     &none      &none                  &none     &none      &none      &none      &none     &none
&none  &kp LCTRL  &kp LALT  &kp LCMD  &kp LSHFT  &none                  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS  &none
&none  &none      &kp RALT  &none     &none      &none  &none   &none   &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INS   &none
                  &none     &none     &none      &none  &none   &none   &none     &none      &none      &none
            >;
        };

        media_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |       |       |       |       |     |                | CLR  | BT0  | BT1  | BT2  | OUT  |     |
// |     |       |       |       |       |     |                |      |      |      |      |      |     |
// |     | LCTRL | LALT  | LCMD  | LSHFT |     |                | PREV | VOL- | VOL+ | NEXT |      |     |
// |     |       | RALT  |       |       |     |      |  |      |      |      |      |      |      |     |
//               |       |       |       |     |      |  | PLAY | MUTE |      |      |      |
            bindings = <
&none  &none      &none     &none     &none      &none                    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_TOG  &none
&none  &none      &none     &none     &none      &none                    &none       &none         &none         &none         &none         &none
&none  &kp LCTRL  &kp LALT  &kp LCMD  &kp LSHFT  &none                    &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &none         &none
&none  &none      &kp RALT  &none     &none      &none  &none   &none     &none       &none         &none         &none         &none         &none
                  &none     &none     &none      &none  &none   &kp C_PP  &kp C_MUTE  &none         &none         &none
            >;
        };
    };
};
